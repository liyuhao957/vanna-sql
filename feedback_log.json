[
  {
    "question": "帮我查一下oppo手机2025年4月30号17:00:00-17:40:00点击过clickComplain的人，省份需要是广西的，要显示launchid、userid、qaOAIDMD5、model、packageName、sourcePackageName、省份、城市",
    "sql": "%%sql\nSELECT DISTINCT \n    e.launchId, \n    e.userId, \n    e.qaOAIDMD5, \n    i.model, \n    e.packageName, \n    i.sourcePackageName, \n    c.regionName, \n    c.cityName\nFROM ods_RealTime_pcc_quickapp_events e\nLEFT JOIN ods_RealTime_pcc_quickapp_events c\n    ON e.launchId = c.launchId\n    AND c.event = 'config'\n    AND c.timed = '2025-04-30'\nLEFT JOIN ods_RealTime_pcc_quickapp_events i\n    ON e.launchId = i.launchId\n    AND i.event = 'info'\n    AND i.timed = '2025-04-30'\nWHERE e.timed = '2025-04-30'\n    AND e.brand = 'oppo'\n    AND e.event = 'clickComplain'\n    AND c.regionName = '广西'\n    AND e.timedt BETWEEN '2025-04-30 17:00:00' AND '2025-04-30 17:40:00';",
    "type": "correct",
    "time": "2025-05-08T11:49:27.515043"
  },
  {
    "question": "统计今天华为好时光有多少个userid，并查询今天哪个userid下面的launchid最多（每个launchid代表进入了应用一次）",
    "sql": "%%sql\nWITH user_counts AS (\n    -- 统计今天华为好时光的用户总数\n    SELECT COUNT(DISTINCT userId) AS 用户总数\n    FROM ods_RealTime_pcc_quickapp_events\n    WHERE timed = CURRENT_DATE()\n        AND brand = 'huawei'\n        AND packageName = 'com.good.time'\n),\nlaunch_counts AS (\n    -- 查询每个用户的launchId数量，找出最多的\n    SELECT \n        userId AS 用户ID,\n        COUNT(DISTINCT launchId) AS 启动次数\n    FROM ods_RealTime_pcc_quickapp_events\n    WHERE timed = CURRENT_DATE()\n        AND brand = 'huawei'\n        AND packageName = 'com.good.time'\n        AND userId IS NOT NULL\n    GROUP BY userId\n    ORDER BY 启动次数 DESC\n    LIMIT 1\n)\nSELECT \n    uc.用户总数,\n    lc.用户ID AS launchId最多的用户,\n    lc.启动次数 AS 该用户的launchId次数\nFROM user_counts uc\nCROSS JOIN launch_counts lc;",
    "type": "incorrect",
    "time": "2025-05-09T11:07:36.599815"
  },
  {
    "question": "查找2025年5月9号11:00:00-5月9号11:15:00的人\n1. OPPO手机\n2. 省份是江苏\n3. 触发过clickComplain\n需要显示timedt 、launchid、usedrid、qaOAIDMD5、model、packageName、sourcePackageName、regionName、cityName，按时间倒序排序",
    "sql": "%%sql\nSELECT DISTINCT \n    e.timedt,\n    e.launchId, \n    e.userId, \n    e.qaOAIDMD5, \n    i.model, \n    e.packageName, \n    i.sourcePackageName, \n    c.regionName, \n    c.cityName\nFROM ods_RealTime_pcc_quickapp_events e\nLEFT JOIN ods_RealTime_pcc_quickapp_events c\n    ON e.launchId = c.launchId\n    AND c.event = 'config'\n    AND c.timed = '2025-05-09'\nLEFT JOIN ods_RealTime_pcc_quickapp_events i\n    ON e.launchId = i.launchId\n    AND i.event = 'info'\n    AND i.timed = '2025-05-09'\nWHERE e.timed = '2025-05-09'\n    AND e.brand = 'oppo'\n    AND e.event = 'clickComplain'\n    AND c.regionName = '江苏'\n    AND e.timedt BETWEEN '2025-05-09 11:00:00' AND '2025-05-09 11:15:00'\nORDER BY e.timedt DESC;",
    "type": "correct",
    "time": "2025-05-09T11:46:06.220571"
  },
  {
    "question": "我想查询今天VIVO的红莲剧场err占比，需要显示包名、brand、errcode、errmsg、人数（launchid）、占比（显示前10）",
    "sql": "%%sql\nSELECT \n    packageName AS 包名,\n    brand AS 品牌,\n    errCode AS 错误代码,\n    errMsg AS 错误信息,\n    COUNT(DISTINCT launchId) AS 人数,\n    ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY packageName, brand), 2) AS 占比\nFROM ods_RealTime_pcc_quickapp_events\nWHERE timed = CURRENT_DATE()\n    AND brand = 'vivo'\n    AND packageName = 'com.redlotus.theater'\n    AND event = 'err'\nGROUP BY packageName, brand, errCode, errMsg\nORDER BY 人数 DESC\nLIMIT 10;",
    "type": "correct",
    "time": "2025-05-09T12:19:27.328970"
  },
  {
    "question": "查找今天VIVO阳光阅读send2里的ggStatus in ('DOWNLOADED','DOWNLOADING','DOWNLOADFAILED','INSTALLFAILED')的人reqid相同的imp里的reqid like \"%layer_uni%\"，这个reqid 没有发生过clk后又有reqid like %reqid相同的imp里的reqid like \"%layer_uni%\"%，只需要显示3个launchid",
    "sql": "%%sql\nEXPLAIN\nWITH send2_filtered AS (\n    -- 筛选send2事件中ggStatus符合条件的记录\n    SELECT DISTINCT launchId, reqId\n    FROM ods_RealTime_pcc_quickapp_events\n    WHERE timed = CURRENT_DATE()\n        AND brand = 'vivo'\n        AND packageName = 'com.sunshine.read'\n        AND event = 'send2'\n        AND ggStatus IN ('DOWNLOADED', 'DOWNLOADING', 'DOWNLOADFAILED', 'INSTALLFAILED')\n),\nimp_layer AS (\n    -- 筛选imp事件中reqId包含layer_uni的记录，并与send2_filtered关联\n    SELECT DISTINCT s.launchId, s.reqId\n    FROM send2_filtered s\n    JOIN ods_RealTime_pcc_quickapp_events imp\n        ON s.reqId = imp.reqId\n        AND imp.event = 'imp'\n        AND imp.timed = CURRENT_DATE()\n        AND imp.reqId LIKE '%layer_uni%'\n),\nno_clk AS (\n    -- 筛选没有clk事件的记录\n    SELECT il.launchId, il.reqId\n    FROM imp_layer il\n    LEFT JOIN ods_RealTime_pcc_quickapp_events clk\n        ON il.reqId = clk.reqId\n        AND clk.event = 'clk'\n        AND clk.timed = CURRENT_DATE()\n    WHERE clk.reqId IS NULL\n),\nsecond_imp_layer AS (\n    -- 筛选没有clk事件后再次出现imp事件且reqId包含layer_uni的记录\n    SELECT DISTINCT nc.launchId\n    FROM no_clk nc\n    JOIN ods_RealTime_pcc_quickapp_events imp2\n        ON nc.launchId = imp2.launchId\n        AND imp2.event = 'imp'\n        AND imp2.timed = CURRENT_DATE()\n        AND imp2.reqId LIKE '%layer_uni%'\n        AND imp2.timedt > (SELECT MIN(timedt) FROM ods_RealTime_pcc_quickapp_events WHERE reqId = nc.reqId AND event = 'imp' AND timed = CURRENT_DATE())\n    LIMIT 3\n)\nSELECT launchId\nFROM second_imp_layer;",
    "type": "correct",
    "time": "2025-05-13T15:37:33.345409"
  }
]